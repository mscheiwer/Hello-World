let word = "bounce";
let y = 100;
let speed = 2;
function setup() {
  createCanvas(400, 200);
}
function draw() {
  background(220);
  textSize(32);
  textAlign(CENTER, CENTER);
  text(word, width/2, y);
  y += speed;
  if (y > height - 16 || y < 16) {
    speed *= -1;
  }
}
function mousePressed() {
  speed *= 1.5;
}

let particles = [];
let fireworks = [];
function setup() {
  createCanvas(800, 600);
}
function draw() {
  background(0);
  if (random(1) < 0.03) {
    fireworks.push(new Firework());
  }
  for (let i = fireworks.length - 1; i >= 0; i--) {
    fireworks[i].update();
    fireworks[i].show();
    if (fireworks[i].done()) {
      fireworks.splice(i, 1);
    }
  }
}
class Particle {
  constructor(x, y) {
    this.pos = createVector(x, y);
    this.vel = p5.Vector.random2D().mult(random(1, 4));
    this.acc = createVector(0, 0.1);
    this.alpha = 255;
  }
  applyForce(force) {
    this.acc.add(force);
  }
  update() {
    this.vel.add(this.acc);
    this.pos.add(this.vel);
    this.acc.mult(0);
    this.alpha -= 2;
  }
  show() {
    noStroke();
    fill(255, this.alpha);
    ellipse(this.pos.x, this.pos.y, 4);
  }
  done() {
    return this.alpha <= 0;
  }
}
class Firework {
  constructor() {
    this.particles = [];
    this.firework = new Particle(random(width), height);
    this.exploded = false;
  }
  update() {
    if (!this.exploded) {
      this.firework.applyForce(createVector(0, -0.2));
      this.firework.update();
      if (this.firework.vel.y >= 0) {
        this.explode();
        this.exploded = true;
      }
    }
    for (let i = this.particles.length - 1; i >= 0; i--) {
      this.particles[i].applyForce(createVector(0, 0.05));
      this.particles[i].update();
      if (this.particles[i].done()) {
        this.particles.splice(i, 1);
      }
    }
  }
  explode() {
    for (let i = 0; i < 100; i++) {
      let particle = new Particle(this.firework.pos.x, this.firework.pos.y);
      this.particles.push(particle);
    }
  }
  show() {
    if (!this.exploded) {
      this.firework.show();
    }
    for (let i = 0; i < this.particles.length; i++) {
      this.particles[i].show();
    }
  }
  done() {
    return this.exploded && this.particles.length === 0;
  }
}
