let xPos = 0; // Initial x position of NumberOne
let yPos = 200; // Initial y position of NumberOne
let angle = 0; // Initial angle for swiveling
let rotationComplete = false; // Flag to track if rotation is complete
let NumberOneGrabbed = false; // Flag to track if the NumberOne is grabbed by the user
let swayingAmplitude = 20; // Amplitude of swaying motion
let swayingFrequency = 0.05; // Frequency of swaying motion
let swayingAngle = 0; // Angle for swaying motion

let boxLeft = 600; // Left edge of the box (initially off-screen)
let boxTop = 100; // Top edge of the box (initially off-screen)
let boxWidth = 300; // Width of the box
let boxHeight = 300; // Height of the box
let objectRadius = 600; // Radius of the NumberOne
let NumberOneInBox = false; // Flag to track if the NumberOne is inside the box

let NumberTwoX = -200; // Initial x position of NumberTwo
let NumberTwoY = 200; // Initial y position of NumberTwo
let NumberTwoSpeed = 2; // Speed at which NumberTwo slides onto the screen

let stars = []; // Array to hold star positions

let isLyricsSaid = false; // Flag to track if the lyrics have been said
let guitarStringBroken = false; // Flag to track if the guitar string has broken

let audio; // Variable to hold the audio file

function preload() {
  // Load the audio file
  audio = loadSound('SRV_Final_Project.mp3');
}

function setup() {
  createCanvas(1000, 1000);
}

function draw() {
  // Draw NumberTwo if NumberOne is in the box
  if (NumberOneInBox) {
    background(0); // Set background to black
    NumberTwoX += NumberTwoSpeed;
    if (NumberTwoX >= width / 2) {
      NumberTwoX = width / 2;
      // Generate stars only after NumberTwo finishes animation
      if (frameCount % 60 == 0) { // Add stars every second
        for (let i = 0; i < 10; i++) {
          let x = random(width);
          let y = random(height);
          stars.push({ x, y, startTime: millis() }); // Add startTime property to stars
        }
      }
      // Remove stars after three seconds
      for (let i = stars.length - 1; i >= 0; i--) {
        if (millis() - stars[i].startTime > 3000) {
          stars.splice(i, 1);
        }
      }
      // Check if NumberTwo animation is complete and then say the lyrics
      if (!isLyricsSaid) {
        isLyricsSaid = true;
        console.log("Shakin' like a tree, rollin' like a log");
        console.log("Shakin' and 'a rollin' now, that ain't all");
        console.log("Hey, hey, hey, look at little sister");
        console.log("Hey, hey, hey, hey, look at little sister");
        console.log("What about the neighbors, what they gonna say");
        console.log("Stop little sister, gettin' carried away");
        console.log("Hey, hey, hey, look at little sister");
        console.log("Hey, hey, hey, hey, look at little sister");
      }
    }

    push(); 
    translate(NumberTwoX, NumberTwoY); 
    let rotationAngle = map(NumberTwoX, width / 2, width, 0, PI / 3); // Rotate one third of its radius
    rotate(rotationAngle);
    // Draw NumberTwo
    triangle(230,100,250,45,200,100);
    circle(250,50,25);
    rect(200,100,25,175);
    rect(195,225,35,10);
    rect(195,250,35,10);
    rect(195,275,35,10);
    arc(150,285,50,50,QUARTER_PI,HALF_PI+PI);
    rect(125,285,175,100);
    fill(139,69,19);
    ellipse(225,375,175,12);
    line(203,280,203,95);
    line(206,280,206,90);
    line(210,280,210,85);
    line(214,280,214,80);
    line(218,280,218,75);
    line(222,280,222,70);
    circle(200,95,8);
    circle(205,90,8);
    circle(210,85,8);
    circle(215,80,8);
    circle(220,75,8);
    circle(225,70,8);
    arc(300,300,50,50,55,HALF_PI+HALF_PI);
    arc(300,350,50,50,QUARTER_PI=PI,HALF_PI);
    rect(225,300,75,50);
    pop(); 

    // Draw the box
    fill(255); 
    rect(boxLeft, boxTop, boxWidth, boxHeight); 

  } else {
    // Draw NumberOne and the initial background
    background(255); // Set background to white
    // Draw the NumberOne
    if (!rotationComplete) { 
      if (xPos >= width / 2) {
        angle += 0.02; 
        if (angle >= HALF_PI) { 
          angle = HALF_PI; 
          rotationComplete = true; 
          boxLeft = 700; // Set box visible after NumberOne's animation is complete
          boxTop = 400;
          // Check if the rotation angle exceeds a quarter rotation
          if (!guitarStringBroken) {
            guitarStringBroken = true;
            console.log("Guitar string broke!");
          }
        }
      } else { 
        xPos += 2; 
        swayingAngle += swayingFrequency;
        yPos = 200 + swayingAmplitude * sin(swayingAngle);
      }
    }

    push(); 
    translate(xPos, yPos); 
    rotate(angle); 
    // Draw NumberOne
    triangle(230,100,250,45,200,100);
    circle(250,50,25);
    fill(139,69,19); 
    rect(200,100,25,175);
    rect(195,225,35,10);
    rect(195,250,35,10);
    rect(195,275,35,10);
    arc(150,285,50,50,QUARTER_PI,HALF_PI+PI);
    rect(125,285,175,100);
    fill(0,0,0);
    ellipse(225,375,175,12);
    line(203,280,203,95);
    line(206,280,206,90);
    line(210,280,210,85);
    line(214,280,214,80);
    line(218,280,218,75);
    line(222,280,222,70);
    circle(200,95,8);
    circle(205,90,8);
    circle(210,85,8);
    circle(215,80,8);
    circle(220,75,8);
    circle(225,70,8);
    arc(300,300,50,50,55,HALF_PI+HALF_PI);
    arc(300,350,50,50,QUARTER_PI=PI,HALF_PI);
    rect(225,300,75,50);
    pop(); 

    // Draw the box and text only after NumberOne's animation is complete
    if (rotationComplete) {
      fill(255); 
      rect(boxLeft, boxTop, boxWidth, boxHeight); 
      fill(0);
      textSize(20);
      textAlign(CENTER, CENTER);
      text("Replace with Number Two by placing Number One in the box then double clicking the box", boxLeft, boxTop, boxWidth, boxHeight);
    }
  }

  // Draw stars
  for (let i = 0; i < stars.length; i++) {
    fill(255);
    noStroke();
    ellipse(stars[i].x, stars[i].y, 2, 2);
  }
  
  // Move stars across the screen
  for (let i = 0; i < stars.length; i++) {
    stars[i].x += 2;
    if (stars[i].x > width) {
      stars[i].x = 0;
      stars[i].y = random(height);
    }
  }

  // Check if the animation starts and play the audio
  if (!NumberOneInBox && !rotationComplete && frameCount === 1) {
    audio.play();
  }
}

function mousePressed() {
  // Check if NumberOne is grabbed by the user and within the animation range
  if (dist(mouseX, mouseY, xPos, yPos) < objectRadius / 2 && rotationComplete) {
    NumberOneGrabbed = true; 
  }
}

function mouseDragged() {
  // Move NumberOne with the mouse if it's grabbed and not in the box
  if (NumberOneGrabbed && !NumberOneInBox) {
    xPos = mouseX;
    yPos = mouseY;
  }
}

function mouseReleased() {
  // Check if NumberOne is released inside the box
  if (NumberOneGrabbed && mouseX > boxLeft && mouseX < boxLeft + boxWidth && mouseY > boxTop && mouseY < boxTop + boxHeight) {
    NumberOneInBox = true; 
    xPos = -1000; 
    yPos = -1000; 
    angle = 0; 
    rotationComplete = false; 
    boxLeft = -1000;
    boxTop = -1000;
  }
  NumberOneGrabbed = false;
}
